{"version":3,"file":"index-71f1ee40.js","sources":["../../src/features/auth/sign-up/index.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { AuthForm } from '..';\nimport { authFormErrors } from '~/shared/lib';\nimport * as z from 'zod';\n\nexport const SignUpForm = () => {\n  const navigate = useNavigate();\n  const schema = z\n    .object({\n      name: z.string({\n        required_error: authFormErrors.required,\n        invalid_type_error: authFormErrors.wrongType,\n      }),\n      email: z\n        .string({\n          required_error: authFormErrors.required,\n          invalid_type_error: authFormErrors.wrongType,\n        })\n        .email({ message: authFormErrors.wrongEmail }),\n      phone: z\n        .string({\n          required_error: authFormErrors.required,\n          invalid_type_error: authFormErrors.wrongType,\n        })\n        .min(10, { message: authFormErrors.minTenSymbols })\n        .regex(/^((8|\\+7)[- ]?)?(\\(?\\d{3}\\)?[- ]?)?[\\d\\- ]{7,10}$/, {\n          message: authFormErrors.wrongPhone,\n        }),\n      password: z\n        .string({\n          required_error: authFormErrors.required,\n          invalid_type_error: authFormErrors.wrongType,\n        })\n        .min(8, { message: authFormErrors.minEightSymbols }),\n      passwordRepeat: z.string({\n        required_error: authFormErrors.required,\n        invalid_type_error: authFormErrors.wrongType,\n      }),\n    })\n    .superRefine(({ passwordRepeat, password }, ctx) => {\n      if (passwordRepeat !== password) {\n        ctx.addIssue({\n          code: 'custom',\n          message: authFormErrors.wrongPasswordRepeat,\n          path: ['passwordRepeat'],\n        });\n      }\n    });\n\n  const fields = [\n    {\n      name: 'name',\n      label: 'Имя',\n      type: 'text',\n      defaultHelperText: 'Как к вам обращаться?',\n      autoComplete: 'name',\n      required: true,\n      placeholder: '',\n    },\n    {\n      name: 'phone',\n      label: 'Телефон',\n      type: 'tel',\n      defaultHelperText: ' ',\n      autoComplete: 'tel',\n      required: true,\n      placeholder: '+7 (999) 999-99-99',\n    },\n    {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      defaultHelperText: ' ',\n      autoComplete: 'email',\n      required: true,\n      placeholder: '',\n    },\n    {\n      name: 'password',\n      label: 'Пароль',\n      type: 'password',\n      defaultHelperText: ' ',\n      autoComplete: 'new-password',\n      required: true,\n      placeholder: '',\n    },\n    {\n      name: 'passwordRepeat',\n      label: 'Пароль еще раз',\n      type: 'password',\n      defaultHelperText: ' ',\n      autoComplete: 'new-password',\n      required: true,\n      placeholder: '',\n    },\n  ];\n\n  const submit = () => {\n    navigate('/authorizedNoCards', { relative: 'path' });\n  };\n\n  return (\n    <AuthForm\n      fields={fields}\n      schema={schema}\n      button={{ label: 'Далее', fullWidth: true }}\n      submit={submit}\n    />\n  );\n};\n"],"names":["SignUpForm","navigate","useNavigate","schema","z.object","z.string","authFormErrors","passwordRepeat","password","ctx","fields","submit","jsx","AuthForm"],"mappings":"gNAKO,MAAMA,EAAa,IAAM,CAC9B,MAAMC,EAAWC,IACXC,EAASC,EACL,CACN,KAAMC,EAAS,CACb,eAAgBC,EAAe,SAC/B,mBAAoBA,EAAe,SAAA,CACpC,EACD,MAAOD,EACG,CACN,eAAgBC,EAAe,SAC/B,mBAAoBA,EAAe,SACpC,CAAA,EACA,MAAM,CAAE,QAASA,EAAe,WAAY,EAC/C,MAAOD,EACG,CACN,eAAgBC,EAAe,SAC/B,mBAAoBA,EAAe,SAAA,CACpC,EACA,IAAI,GAAI,CAAE,QAASA,EAAe,aAAe,CAAA,EACjD,MAAM,oDAAqD,CAC1D,QAASA,EAAe,UAAA,CACzB,EACH,SAAUD,EACA,CACN,eAAgBC,EAAe,SAC/B,mBAAoBA,EAAe,SAAA,CACpC,EACA,IAAI,EAAG,CAAE,QAASA,EAAe,gBAAiB,EACrD,eAAgBD,EAAS,CACvB,eAAgBC,EAAe,SAC/B,mBAAoBA,EAAe,SAAA,CACpC,CAAA,CACF,EACA,YAAY,CAAC,CAAE,eAAAC,EAAgB,SAAAC,CAAA,EAAYC,IAAQ,CAC9CF,IAAmBC,GACrBC,EAAI,SAAS,CACX,KAAM,SACN,QAASH,EAAe,oBACxB,KAAM,CAAC,gBAAgB,CAAA,CACxB,CACH,CACD,EAEGI,EAAS,CACb,CACE,KAAM,OACN,MAAO,MACP,KAAM,OACN,kBAAmB,wBACnB,aAAc,OACd,SAAU,GACV,YAAa,EACf,EACA,CACE,KAAM,QACN,MAAO,UACP,KAAM,MACN,kBAAmB,IACnB,aAAc,MACd,SAAU,GACV,YAAa,oBACf,EACA,CACE,KAAM,QACN,MAAO,QACP,KAAM,QACN,kBAAmB,IACnB,aAAc,QACd,SAAU,GACV,YAAa,EACf,EACA,CACE,KAAM,WACN,MAAO,SACP,KAAM,WACN,kBAAmB,IACnB,aAAc,eACd,SAAU,GACV,YAAa,EACf,EACA,CACE,KAAM,iBACN,MAAO,iBACP,KAAM,WACN,kBAAmB,IACnB,aAAc,eACd,SAAU,GACV,YAAa,EACf,CAAA,EAGIC,EAAS,IAAM,CACnBV,EAAS,qBAAsB,CAAE,SAAU,MAAQ,CAAA,CAAA,EAInD,OAAAW,EAAA,IAACC,EAAA,CACC,OAAAH,EACA,OAAAP,EACA,OAAQ,CAAE,MAAO,QAAS,UAAW,EAAK,EAC1C,OAAAQ,CAAA,CAAA,CAGN"}